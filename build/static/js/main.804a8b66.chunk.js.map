{"version":3,"sources":["Charts/RadarChart.js","functions.js","Components/Dashboard/Accuracy.js","Charts/PieChart.js","Components/Dashboard/Volume.js","Charts/LineChart.js","Components/Dashboard/Trends.js","Components/Dashboard/Upload.js","Components/Dashboard/index.js","Components/Accuracy/BarChart.js","Components/Accuracy/MetricsTable.js","Components/Accuracy/ValueLabel.js","Components/Accuracy/index.js","Components/Invoices/ModalContent.js","Components/Invoices/index.js","Charts/CustomActiveShapePieChart.js","Components/Trends/CountryPie.js","Charts/StackedAreaChart.js","Components/Trends/CountryStack.js","Charts/SimpleBarChart.js","Components/Trends/CategoryBar.js","Charts/MultipleLineChart.js","Components/Trends/CategoryLine.js","Components/Trends/index.js","App.js","serviceWorker.js","index.js"],"names":["RadarChartComp","props","outerRadius","data","dataKey","stroke","fill","fillOpacity","percRound","inp","toFixed","keyToName","string","replace","charAt","toUpperCase","slice","numberWithCommas","x","toString","getRandomInt","max","Math","floor","random","sortDate","a","b","name","formatAreaChartData","ytdSpending","Singapore","Japan","dates","countries","Set","forEach","inv","date_of_invoice","country_of_consumption","total_amount","parseInt","Object","keys","map","date","out","c","Accuracy","className","onClick","handlePageChange","key","style","marginTop","textAlign","fontSize","fontFamily","fontWeight","marginBottom","color","accuracy","has","push","category","F1","formatData","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","startAngle","endAngle","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","y","dy","d","r","Example","state","activeIndex","onPieEnter","index","setState","getCatTotal","cats","cat","this","activeShape","onMouseEnter","PureComponent","invoicesData","filter","invoice","status","length","sort","amt","type","strokeWidth","thisYearInvoices","processed","indexOf","ytdTotal","element","getTotal","Upload","transform","Dashboard","display","justifyContent","accuracyData","BarChartComp","layout","margin","top","right","left","bottom","strokeDasharray","Column","Table","MetricsTable","dataSource","Recall","Support","Precision","title","dataIndex","ValueLabel","label","support","marginLeft","width","precision","recall","EditableContext","React","createContext","EditableFormRow","Form","create","form","Provider","EditableCell","editing","toggleEdit","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","Item","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","paddingRight","editable","restProps","Consumer","Component","EditableTable","dataArray","confidence","row","newData","findIndex","item","splice","handleSubmit","filename","socket","emit","columns","components","body","cell","col","onCell","rowClassName","bordered","pagination","statusColours","unprocessed","processing","reviewed","categories","text","Invoices","filteredInfo","sortedInfo","visible","handleChange","filters","sorter","clearFilters","clearAll","formatAccCol","showModal","selected","handleOk","handleCancel","processData","num","den","sortOrder","columnKey","order","ellipsis","render","name_of_provider","filteredValue","onFilter","includes","k","tag","acc","onOk","onCancel","ModalContent","onChange","COLORS","console","log","height","entry","CountryPie","outData","country","total","calcTotal","position","angle","stackId","CountryStack","SimpleBarChart","CategoryBar","highest","isNaN","Amount","formattedDate","MultipleLineChart","dateDate","dataCategories","CategoryLine","get_categories","i","add","delete","Array","from","format_date_cat","datum","temp","formattedData","len","last","secondLast","difference","formatIncrease","Trends","App","page","notificationHandler","icon","spin","theme","twoToneColor","notification","open","description","content","invoices","io","on","JSON","parse","Header","Layout","Content","Footer","mode","defaultSelectedKeys","lineHeight","padding","background","overflowY","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.804a8b66.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport {\r\n  Radar,\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nexport default function RadarChartComp(props) {\r\n  return (\r\n    <ResponsiveContainer>\r\n      <RadarChart outerRadius={100} data={props.data}>\r\n        <PolarGrid />\r\n        <PolarAngleAxis dataKey=\"category\" />\r\n        <PolarRadiusAxis />\r\n        <Radar\r\n          dataKey=\"F1\"\r\n          stroke=\"#5366ac\"\r\n          fill=\"#5366ac\"\r\n          fillOpacity={0.6}\r\n        />\r\n      </RadarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","export const percRound = inp => {\r\n  if (inp) {\r\n    if (inp === -0.0001) {\r\n      return \"Extrapolated \";\r\n    }\r\n    return (inp * 100).toFixed(2);\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const keyToName = inp => {\r\n  const string = inp.replace(/_/g, \" \");\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport function sortDate(a, b) {\r\n  if (a.name > b.name) {\r\n    return 1;\r\n  } else if (a.name < b.name) {\r\n    return -1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport const formatAreaChartData = data => {\r\n  const ytdSpending = { Singapore: 0, \"Hong Kong\": 0, Japan: 0 };\r\n  const dates = {};\r\n  const countries = new Set([\"Singapore\", \"Hong Kong\", \"Japan\"]);\r\n  data.forEach(inv => {\r\n    let { date_of_invoice, country_of_consumption, total_amount } = inv;\r\n    if (\r\n      date_of_invoice !== \"No Prediction\" &&\r\n      country_of_consumption !== \"No Prediction\" &&\r\n      total_amount !== \"No Prediction\"\r\n    ) {\r\n      total_amount = parseInt(total_amount);\r\n      ytdSpending[country_of_consumption] += total_amount;\r\n      if (dates[date_of_invoice]) {\r\n        if (dates[date_of_invoice][country_of_consumption]) {\r\n          dates[date_of_invoice][country_of_consumption] += total_amount;\r\n        } else {\r\n          dates[date_of_invoice][country_of_consumption] = total_amount;\r\n        }\r\n      } else {\r\n        dates[date_of_invoice] = {};\r\n        dates[date_of_invoice][country_of_consumption] = total_amount;\r\n      }\r\n    }\r\n  });\r\n  const dateArr = Object.keys(dates).map(date => {\r\n    const out = { name: date };\r\n    countries.forEach(c => {\r\n      if (dates[date][c]) {\r\n        out[c] = dates[date][c];\r\n      } else {\r\n        out[c] = 0;\r\n      }\r\n    });\r\n    return out;\r\n  });\r\n  return [dateArr, ytdSpending];\r\n};\r\n\r\n","import React from \"react\";\r\nimport RadarChart from \"../../Charts/RadarChart\";\r\nimport { percRound } from \"../../functions\";\r\n\r\nexport default function Accuracy(props) {\r\n  const formatData = data => {\r\n    data = data;\r\n    if (data) {\r\n      const out = [];\r\n      for (let key of Object.keys(data)) {\r\n        if (!new Set([\"macro avg\", \"accuracy\", \"weighted avg\"]).has(key)) {\r\n          out.push({\r\n            category: key,\r\n            F1: percRound(data[key][\"f1-score\"])\r\n          });\r\n        }\r\n      }\r\n      return out;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"main-card\"\r\n      onClick={() => props.handlePageChange({ key: \"ACCURACY\" })}\r\n    >\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>ACCURACY</h1>\r\n        <h1\r\n          style={{\r\n            fontSize: \"4rem\",\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"300\",\r\n            marginBottom: \"-20px\",\r\n            color: \"#5366ac\"\r\n          }}\r\n        >\r\n          {props.data\r\n            ? percRound(props.data.accuracy)\r\n            : 0}\r\n          %\r\n        </h1>\r\n        <h4>Overall Classifier Accuracy</h4>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <RadarChart data={formatData(props.data)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\r\n\r\nconst renderActiveShape = props => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`${value} Files`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`${(percent * 100).toFixed(2)}% of Total`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class Example extends PureComponent {\r\n  state = {\r\n    activeIndex: 0\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index\r\n    });\r\n  };\r\n\r\n  getCatTotal = data => {\r\n    const cats = {};\r\n    data.forEach(inv => {\r\n      if (cats[inv.category]) {\r\n        cats[inv.category]++;\r\n      } else {\r\n        cats[inv.category] = 1;\r\n      }\r\n    });\r\n    return Object.keys(cats).map(cat => ({\r\n      name: cat,\r\n      value: cats[cat]\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer>\r\n        <PieChart>\r\n          <Pie\r\n            activeIndex={this.state.activeIndex}\r\n            activeShape={renderActiveShape}\r\n            data={this.getCatTotal(this.props.data)}\r\n            innerRadius={70}\r\n            outerRadius={100}\r\n            fill=\"#02afbc\"\r\n            dataKey=\"value\"\r\n            onMouseEnter={this.onPieEnter}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PieChart from \"../../Charts/PieChart\";\r\n\r\nexport default function Accuracy(props) {\r\n  return (\r\n    <div\r\n      className=\"main-card\"\r\n      onClick={() => props.handlePageChange({ key: \"INVOICES\" })}\r\n    >\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>INVOICES</h1>\r\n        <h1\r\n          style={{\r\n            fontSize: \"4rem\",\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"300\",\r\n            marginBottom: \"-20px\",\r\n            color: \"#02afbc\"\r\n          }}\r\n        >\r\n          {\r\n            props.invoicesData.filter(\r\n              invoice => invoice.status !== \"unprocessed\"\r\n            ).length\r\n          }\r\n        </h1>\r\n        <h4>Total Documents Processed</h4>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <PieChart\r\n          data={props.invoicesData.filter(\r\n            invoice => invoice.status !== \"unprocessed\" && invoice.category\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { sortDate } from \"../functions\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    let data = this.props.data.sort(sortDate);\r\n    data = data.slice(Math.max(data.length - 5, 1));\r\n    data = data.map(inv => {\r\n      return {\r\n        name: inv.name,\r\n        value: inv.Singapore + inv[\"Hong Kong\"] + inv[\"Japan\"],\r\n        amt: 0\r\n      };\r\n    });\r\n    return (\r\n      <ResponsiveContainer>\r\n        <LineChart data={data}>\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"value\"\r\n            stroke=\"#6f2282\"\r\n            strokeWidth={2}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport LineChart from \"../../Charts/LineChart\";\r\nimport { numberWithCommas } from \"../../functions\";\r\n\r\nexport default function Accuracy(props) {\r\n  const thisYearInvoices = props.processed[0].filter(inv => {\r\n    return inv.name.indexOf(\"2019\") > -1;\r\n  });\r\n\r\n  const getTotal = inv => {\r\n    let ytdTotal = 0;\r\n    if (inv) {\r\n      inv.forEach(element => {\r\n        ytdTotal += element[\"Singapore\"];\r\n        ytdTotal += element[\"Hong Kong\"];\r\n        ytdTotal += element[\"Japan\"];\r\n      });\r\n    }\r\n\r\n    return ytdTotal;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"main-card\"\r\n      onClick={() => props.handlePageChange({ key: \"TRENDS\" })}\r\n    >\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>TRENDS</h1>\r\n        <h1\r\n          style={{\r\n            fontSize: \"4rem\",\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"300\",\r\n            marginBottom: \"-20px\",\r\n            color: \"#6f2282\"\r\n          }}\r\n        >\r\n          ${numberWithCommas(getTotal(thisYearInvoices))}\r\n        </h1>\r\n        <h4>Year to Date Spending</h4>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <LineChart data={thisYearInvoices} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\n\r\nexport default function Upload() {\r\n  return (\r\n    <div className=\"card\">\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1>UPLOAD</h1>\r\n        <Icon\r\n          style={{ transform: \"scale(2)\", marginBottom: \"24px\" }}\r\n          type=\"upload\"\r\n        />\r\n        <p>Drag file here to upload Invoice</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Accuracy from \"./Accuracy\";\r\nimport Volume from \"./Volume\";\r\nimport Trends from \"./Trends\";\r\nimport Upload from \"./Upload\";\r\n\r\nexport default function Dashboard(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}\r\n      >\r\n        <Accuracy\r\n          handlePageChange={props.handlePageChange}\r\n          data={props.accuracyData}\r\n        />\r\n        <Volume\r\n          invoicesData={props.invoicesData}\r\n          handlePageChange={props.handlePageChange}\r\n        />\r\n        <Trends\r\n          invoicesData={props.invoicesData}\r\n          processed={props.processed}\r\n          handlePageChange={props.handlePageChange}\r\n        />\r\n      </div>\r\n      <Upload />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { percRound } from \"../../functions\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nexport default function BarChartComp(props) {\r\n  const formatData = data => {\r\n    const out = [];\r\n    for (let key of Object.keys(data)) {\r\n      if (key !== \"macro avg\" && key !== \"weighted avg\" && key !== \"accuracy\") {\r\n        out.push({\r\n          category: key,\r\n          \"f1-score\": percRound(data[key][\"f1-score\"])\r\n        });\r\n      }\r\n    }\r\n    return out;\r\n  };\r\n  return (\r\n    <ResponsiveContainer>\r\n      <BarChart\r\n        data={formatData(props.data)}\r\n        layout=\"vertical\"\r\n        margin={{ top: 5, right: 20, left: 35, bottom: 5 }}\r\n      >\r\n        <XAxis type=\"number\" />\r\n        <YAxis type=\"category\" dataKey=\"category\" />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"f1-score\" fill=\"#5366ac\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { percRound } from \"../../functions\";\r\n\r\nconst { Column } = Table;\r\n\r\nexport default function MetricsTable(props) {\r\n  const formatData = data => {\r\n    const out = [];\r\n    for (let key of Object.keys(data)) {\r\n      if (!new Set([\"macro avg\", \"accuracy\", \"weighted avg\"]).has(key)) {\r\n        out.push({\r\n          category: key,\r\n          F1: percRound(data[key][\"f1-score\"]),\r\n          Recall: percRound(data[key][\"recall\"]),\r\n          Support: data[key][\"support\"],\r\n          Precision: percRound(data[key][\"precision\"])\r\n        });\r\n      }\r\n    }\r\n    return out;\r\n  };\r\n  return (\r\n    <Table dataSource={formatData(props.data)}>\r\n      <Column title=\"Category\" dataIndex=\"category\" key=\"category\" />\r\n      <Column title=\"Precision\" dataIndex=\"Precision\" key=\"Precision\" />\r\n      <Column title=\"Recall\" dataIndex=\"Recall\" key=\"Recall\" />\r\n      <Column title=\"F1\" dataIndex=\"F1\" key=\"F1\" />\r\n      <Column title=\"Support\" dataIndex=\"Support\" key=\"Support\" />\r\n    </Table>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ValueLabel(props) {\r\n  return (\r\n    <div>\r\n      <h1\r\n        style={{\r\n          fontSize: \"2rem\",\r\n          fontFamily: \"Roboto\",\r\n          fontWeight: \"300\",\r\n          marginBottom: \"-10px\",\r\n          color: props.color\r\n        }}\r\n      >\r\n        {props.value}\r\n      </h1>\r\n      <h4>{props.label}</h4>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport RadarChart from \"../../Charts/RadarChart\";\r\nimport BarChart from \"./BarChart\";\r\nimport MetricsTable from \"./MetricsTable\";\r\nimport ValueLabel from \"./ValueLabel\";\r\nimport { percRound } from \"../../functions\";\r\n\r\nexport default function Accuracy(props) {\r\n  const { accuracyData: data } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n      }}\r\n    >\r\n      <div className=\"main-card-no-hover\">\r\n        <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n          <h1>AGGREGATE ACCURACY</h1>\r\n          <h1\r\n            style={{\r\n              fontSize: \"4rem\",\r\n              fontFamily: \"Roboto\",\r\n              fontWeight: \"300\",\r\n              marginBottom: \"-20px\",\r\n              color: \"#5366ac\"\r\n            }}\r\n          >\r\n            {percRound(data.accuracy) + \"%\"}\r\n          </h1>\r\n          <h4>Overall Classifier Accuracy</h4>\r\n          <hr style={{ margin: \"40px\" }} />\r\n          <ValueLabel\r\n            value={data[\"macro avg\"] && data[\"macro avg\"].support}\r\n            label=\"Total Tokens Classified\"\r\n            color=\"#5366ac\"\r\n          />\r\n          <hr style={{ margin: \"40px\" }} />\r\n          {/* <div\r\n            style={{\r\n              marginLeft: \"25%\",\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <ValueLabel value={192} label=\"True Positives\" color=\"#006f3c\" />\r\n            <ValueLabel value={2401} label=\"True Negatives\" color=\"#006f3c\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginLeft: \"25%\",\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <ValueLabel value={201} label=\"False Positives\" color=\"#bf212f\" />\r\n            <ValueLabel value={1124} label=\"False Negatives\" color=\"#bf212f\" />\r\n          </div> */}\r\n          <p>Weighted Average</p>\r\n          <div\r\n            style={{\r\n              marginLeft: \"10%\",\r\n              width: \"80%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <ValueLabel\r\n              value={\r\n                data[\"weighted avg\"] &&\r\n                percRound(data[\"weighted avg\"].precision) + \"%\"\r\n              }\r\n              label=\"Precision\"\r\n              color=\"grey\"\r\n            />\r\n            <ValueLabel\r\n              value={\r\n                data[\"weighted avg\"] &&\r\n                percRound(data[\"weighted avg\"].recall) + \"%\"\r\n              }\r\n              label=\"Recall\"\r\n              color=\"grey\"\r\n            />\r\n            <ValueLabel\r\n              value={\r\n                data[\"weighted avg\"] &&\r\n                percRound(data[\"weighted avg\"][\"f1-score\"]) + \"%\"\r\n              }\r\n              label=\"F1\"\r\n              color=\"grey\"\r\n            />\r\n          </div>\r\n          <hr style={{ margin: \"40px\" }} />\r\n          <p>Macro Average</p>\r\n          <div\r\n            style={{\r\n              marginLeft: \"10%\",\r\n              width: \"80%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <ValueLabel\r\n              value={\r\n                data[\"macro avg\"] &&\r\n                percRound(data[\"macro avg\"].precision) + \"%\"\r\n              }\r\n              label=\"Precision\"\r\n              color=\"grey\"\r\n            />\r\n            <ValueLabel\r\n              value={\r\n                data[\"macro avg\"] && percRound(data[\"macro avg\"].recall) + \"%\"\r\n              }\r\n              label=\"Recall\"\r\n              color=\"grey\"\r\n            />\r\n            <ValueLabel\r\n              value={\r\n                data[\"macro avg\"] &&\r\n                percRound(data[\"macro avg\"][\"f1-score\"]) + \"%\"\r\n              }\r\n              label=\"F1\"\r\n              color=\"grey\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-card-no-hover\">\r\n        <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n          <h1>CATEGORY BREAKDOWN</h1>\r\n          <h4>Figures in Percent</h4>\r\n\r\n          <div className=\"chart-container-tall\">\r\n            <BarChart data={data} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-card-no-hover\">\r\n        <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n          <h1>CLASSIFIER METRICS</h1>\r\n        </div>\r\n        <MetricsTable data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { percRound, keyToName } from \"../../functions\";\r\nimport { Table, Input, Button, Form } from \"antd\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"Field\",\r\n        dataIndex: \"name\",\r\n        width: \"30%\"\r\n      },\r\n      {\r\n        title: \"Value\",\r\n        dataIndex: \"value\",\r\n        editable: true\r\n      },\r\n      {\r\n        title: \"Confidence\",\r\n        dataIndex: \"confidence\"\r\n      }\r\n    ];\r\n    this.state = { dataSource: this.formatData(this.props.data) };\r\n  }\r\n\r\n  formatData = data => {\r\n    let dataArray = [];\r\n    let index = 0;\r\n    for (let key of Object.keys(data)) {\r\n      if (key.indexOf(\"_conf\") > -1) {\r\n        dataArray.push({\r\n          key: index,\r\n          name: keyToName(key.replace(\"_conf\", \"\")),\r\n          confidence: percRound(data[key]) + \"%\",\r\n          value: data[key.replace(\"_conf\", \"\")]\r\n        });\r\n        index++;\r\n      }\r\n    }\r\n    return dataArray;\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { filename, socket } = this.props;\r\n    const { dataSource } = this.state;\r\n    const payload = { filename, data: dataSource };\r\n    socket.emit(\"req_invoice_details_update\", payload);\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <h2>{this.props.filename}</h2>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ marginTop: \"12px\", right: \"0px\" }}\r\n          onClick={this.handleSubmit}\r\n        >\r\n          {\"Validate & Save All\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTable;\r\n","import React from \"react\";\r\nimport { Table, Button, Tag, Modal } from \"antd\";\r\nimport ModalContent from \"./ModalContent\";\r\n\r\nconst statusColours = {\r\n  unprocessed: \"red\",\r\n  processing: \"orange\",\r\n  processed: \"blue\",\r\n  reviewed: \"green\"\r\n};\r\n\r\nconst categories = [\"Telco\", \"Consultants\", \"Services\", \"Hardware\", \"Others\"];\r\n\r\nconst dates = [\r\n  { text: \"Jan\", value: \"-01\" },\r\n  { text: \"Feb\", value: \"-02\" },\r\n  { text: \"Mar\", value: \"-03\" },\r\n  { text: \"Apr\", value: \"-04\" },\r\n  { text: \"May\", value: \"-05\" },\r\n  { text: \"Jun\", value: \"-06\" },\r\n  { text: \"Jul\", value: \"-07\" },\r\n  { text: \"Aug\", value: \"-08\" },\r\n  { text: \"Sep\", value: \"-09\" },\r\n  { text: \"Oct\", value: \"-10\" },\r\n  { text: \"Nov\", value: \"-11\" },\r\n  { text: \"Dec\", value: \"-12\" }\r\n];\r\n\r\nclass Invoices extends React.Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n    data: [],\r\n    visible: false\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null\r\n    });\r\n  };\r\n\r\n  formatAccCol = percent => {\r\n    if (percent < 30) {\r\n      return \"red\";\r\n    }\r\n    if (percent < 60) {\r\n      return \"orange\";\r\n    }\r\n    return \"green\";\r\n  };\r\n\r\n  showModal = (data, text) => {\r\n    this.setState({\r\n      visible: true,\r\n      selected: data,\r\n      filename: text\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false,\r\n      selected: null\r\n    });\r\n  };\r\n\r\n  processData = data => {\r\n    for (let row of data) {\r\n      let num = 0;\r\n      let den = 0;\r\n      for (let key in row) {\r\n        if (key.indexOf(\"_conf\") > -1 && row[key] > 0) {\r\n          den++;\r\n          num += row[key];\r\n        }\r\n      }\r\n      row[\"accuracy\"] = ((num / den) * 100).toFixed(2);\r\n    }\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n\r\n    const columns = [\r\n      {\r\n        title: \"File Name\",\r\n        dataIndex: \"id\",\r\n        key: \"id\",\r\n        sorter: (a, b) => a.id < b.id,\r\n        sortOrder: sortedInfo.columnKey === \"id\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        render: (text, data) => (\r\n          <a onClick={() => this.showModal(data, text)}>{text}</a>\r\n        )\r\n      },\r\n      {\r\n        title: \"Provider\",\r\n        dataIndex: \"name_of_provider\",\r\n        key: \"name_of_provider\",\r\n        sorter: (a, b) => a.name_of_provider < b.name_of_provider,\r\n        sortOrder:\r\n          sortedInfo.columnKey === \"name_of_provider\" && sortedInfo.order,\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date_of_invoice\",\r\n        key: \"date_of_invoice\",\r\n        filters: dates,\r\n        filteredValue: filteredInfo.date_of_invoice || null,\r\n        onFilter: (value, record) => record.date_of_invoice.includes(value),\r\n        sorter: (a, b) => a.date_of_invoice.length - b.date_of_invoice.length,\r\n        sortOrder:\r\n          sortedInfo.columnKey === \"date_of_invoice\" && sortedInfo.order,\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: \"Category\",\r\n        dataIndex: \"category\",\r\n        key: \"category\",\r\n        filters: categories.map(cat => ({ text: cat, value: cat })),\r\n        filteredValue: filteredInfo.category || null,\r\n        onFilter: (value, record) => record.category.includes(value),\r\n        sorter: (a, b) => a.category.length - b.category.length,\r\n        sortOrder: sortedInfo.columnKey === \"category\" && sortedInfo.order,\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: \"Country\",\r\n        dataIndex: \"country_of_consumption\",\r\n        key: \"country_of_consumption\",\r\n        filters: [\r\n          { text: \"Singapore\", value: \"Singapore\" },\r\n          { text: \"Hong Kong\", value: \"Hong Kong\" },\r\n          { text: \"Japan\", value: \"Japan\" }\r\n        ],\r\n        filteredValue: filteredInfo.country_of_consumption || null,\r\n        onFilter: (value, record) =>\r\n          record.country_of_consumption &&\r\n          record.country_of_consumption.includes(value),\r\n        sorter: (a, b) =>\r\n          a.country_of_consumption.length - b.country_of_consumption.length,\r\n        sortOrder:\r\n          sortedInfo.columnKey === \"country_of_consumption\" && sortedInfo.order,\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        filters: Object.keys(statusColours).map(k => ({ text: k, value: k })),\r\n        filteredValue: filteredInfo.status || null,\r\n        onFilter: (value, record) => record.status.includes(value),\r\n        sortOrder: sortedInfo.columnKey === \"status\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        render: tag => (\r\n          <Tag color={statusColours[tag]} key={tag}>\r\n            {tag}\r\n          </Tag>\r\n        )\r\n      },\r\n      {\r\n        title: \"Confidence\",\r\n        dataIndex: \"accuracy\",\r\n        key: \"accuracy\",\r\n        filters: [\r\n          { text: \"High\", value: [100, 70] },\r\n          { text: \"Mid\", value: [70, 30] },\r\n          { text: \"Low\", value: [30, 0] }\r\n        ],\r\n        filteredValue: filteredInfo.accuracy || null,\r\n        onFilter: (value, record) =>\r\n          record.accuracy > value[1] && record.accuracy <= value[0],\r\n        sorter: (a, b) => a.accuracy - b.accuracy,\r\n        sortOrder: sortedInfo.columnKey === \"accuracy\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        render: acc => (\r\n          <Tag color={this.formatAccCol(acc)} key={acc}>\r\n            {acc}%\r\n          </Tag>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"card\">\r\n        <Modal\r\n          title=\"File Details\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width=\"80%\"\r\n        >\r\n          {this.state.visible && (\r\n            <ModalContent\r\n              socket={this.props.socket}\r\n              data={this.state.selected}\r\n              filename={this.state.filename}\r\n            />\r\n          )}\r\n        </Modal>\r\n        <div>\r\n          <div className=\"table-operations\">\r\n            <Button onClick={this.clearFilters}>Clear filters</Button>\r\n            <Button onClick={this.clearAll}>Clear filters and sorters</Button>\r\n          </div>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={this.processData(this.props.invoicesData)}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Invoices;\r\n","import React, { PureComponent } from \"react\";\r\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\r\nimport { numberWithCommas } from \"../functions\";\r\n\r\nconst COLORS = [\"#5366ac\", \"#02afbc\", \"#6f2282\"];\r\n\r\nconst renderActiveShape = props => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    name,\r\n    value\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`$${numberWithCommas(value)}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class Example extends PureComponent {\r\n  state = {\r\n    activeIndex: 0\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.data);\r\n    return (\r\n      <PieChart width={500} height={400}>\r\n        <Pie\r\n          activeIndex={this.state.activeIndex}\r\n          activeShape={renderActiveShape}\r\n          data={this.props.data}\r\n          cx={250}\r\n          cy={200}\r\n          innerRadius={60}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          onMouseEnter={this.onPieEnter}\r\n        >\r\n          {this.props.data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport CustomActiveShapePieChart from \"../../Charts/CustomActiveShapePieChart\";\r\nimport { numberWithCommas } from \"../../functions\";\r\n\r\nexport default function CountryPie(props) {\r\n  const processedData = data =>\r\n    Object.keys(data).map(country => {\r\n      return { name: country, value: data[country] };\r\n    });\r\n\r\n  const outData = processedData(props.invoicesData[1]);\r\n\r\n  const calcTotal = data => {\r\n    let total = 0;\r\n\r\n    data.forEach(d => {\r\n      if (d.name !== \"null\") {\r\n        total += d.value;\r\n      }\r\n    });\r\n    return total;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>EXPENSE BY COUNTRIES</h1>\r\n        <h1\r\n          style={{\r\n            fontSize: \"4rem\",\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"300\",\r\n            marginBottom: \"-20px\",\r\n            color: \"#02afbc\"\r\n          }}\r\n        >\r\n          ${numberWithCommas(calcTotal(outData))}\r\n        </h1>\r\n        <h4>Total Across all Countries</h4>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <CustomActiveShapePieChart data={outData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <AreaChart\r\n        width={900}\r\n        height={400}\r\n        data={this.props.data}\r\n        margin={{\r\n          top: 10,\r\n          right: 10,\r\n          left: 45,\r\n          bottom: 45\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis\r\n          dataKey=\"name\"\r\n          label={{ value: \"Date (YYYY-MM-DD)\", position: \"bottom\" }}\r\n        />\r\n        <YAxis label={{ value: \"Total Spending (SGD)\", angle: -90, position: \"left\" }} />\r\n        <Tooltip />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"Singapore\"\r\n          stackId=\"1\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#5366ac\"\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"Hong Kong\"\r\n          stackId=\"1\"\r\n          stroke=\"#82ca9d\"\r\n          fill=\"#02afbc\"\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"Japan\"\r\n          stackId=\"1\"\r\n          stroke=\"#ffc658\"\r\n          fill=\"#6f2282\"\r\n        />\r\n      </AreaChart>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StackedAreaChart from \"../../Charts/StackedAreaChart\";\r\nimport { sortDate, numberWithCommas } from \"../../functions\";\r\n\r\nexport default function CountryStack(props) {\r\n\r\n  return (\r\n    <div className=\"main-card2\">\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>COUNTRY TRENDS</h1>\r\n        <div\r\n          style={{\r\n            marginLeft: \"10%\",\r\n            width: \"80%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <div>\r\n            <strong>Singapore</strong>\r\n            <h1\r\n              style={{\r\n                fontSize: \"3rem\",\r\n                fontFamily: \"Roboto\",\r\n                fontWeight: \"300\",\r\n                marginBottom: \"-10px\",\r\n                marginTop: \"-10px\",\r\n                color: \"#6f2282\"\r\n              }}\r\n            >\r\n              ${numberWithCommas(props.invoicesData[1][\"Singapore\"])}\r\n            </h1>\r\n            <h4>Total Spending</h4>\r\n          </div>\r\n          <div>\r\n            <strong>Hong Kong</strong>\r\n            <h1\r\n              style={{\r\n                fontSize: \"3rem\",\r\n                fontFamily: \"Roboto\",\r\n                fontWeight: \"300\",\r\n                marginBottom: \"-10px\",\r\n                marginTop: \"-10px\",\r\n                color: \"#6f2282\"\r\n              }}\r\n            >\r\n              ${numberWithCommas(props.invoicesData[1][\"Hong Kong\"])}\r\n            </h1>\r\n            <h4>Total Spending</h4>\r\n          </div>\r\n          <div>\r\n            <strong>Japan</strong>\r\n            <h1\r\n              style={{\r\n                fontSize: \"3rem\",\r\n                fontFamily: \"Roboto\",\r\n                fontWeight: \"300\",\r\n                marginBottom: \"-10px\",\r\n                marginTop: \"-10px\",\r\n                color: \"#6f2282\"\r\n              }}\r\n            >\r\n              ${numberWithCommas(props.invoicesData[1][\"Japan\"])}\r\n            </h1>\r\n            <h4>Total Spending</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <StackedAreaChart data={props.invoicesData[0].sort(sortDate)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { getRandomInt } from \"../functions\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst SimpleBarChart = props => {\r\n  return (\r\n    <BarChart\r\n      width={500}\r\n      height={350}\r\n      data={props.data}\r\n      margin={{\r\n        top: 5,\r\n        right: 20,\r\n        left: 20,\r\n        bottom: 5\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey=\"Amount\" fill=\"#6F2282\">\r\n        {props.data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={\"#6F2282\"} />\r\n        ))}\r\n      </Bar>\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default SimpleBarChart;\r\n","import React from \"react\";\r\nimport SimpleBarChart from \"../../Charts/SimpleBarChart\";\r\nimport { numberWithCommas } from \"../../functions\";\r\n\r\nexport default function CategoryBar(props) {\r\n  const formatData = data => {\r\n    const categories = {};\r\n    let highest = [0, \"\", \"\"];\r\n\r\n    data.forEach(row => {\r\n      let { category, total_amount, id, date_of_invoice } = row;\r\n      total_amount = parseInt(total_amount);\r\n      if (total_amount > highest[0]) {\r\n        highest = [total_amount, id, date_of_invoice];\r\n      }\r\n      if (categories[category] && !isNaN(total_amount)) {\r\n        categories[category] += total_amount;\r\n      } else {\r\n        categories[category] = total_amount;\r\n      }\r\n    });\r\n\r\n    const dataArr = Object.keys(categories).map(key => ({\r\n      name: key,\r\n      Amount: categories[key]\r\n    }));\r\n\r\n    return [dataArr.filter(r => r.name !== \"null\"), highest];\r\n  };\r\n\r\n  const formattedDate = formatData(props.invoicesData);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>EXPENSE BY CATEGORY</h1>\r\n        <h4>In SGD</h4>\r\n        <div className=\"chart-container\">\r\n          <SimpleBarChart data={formatData(props.invoicesData)[0]} />\r\n        </div>\r\n        <h1>Single Biggest Expense</h1>\r\n        <h1\r\n          style={{\r\n            fontSize: \"3rem\",\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"300\",\r\n            marginBottom: \"-10px\",\r\n            marginTop: \"-10px\",\r\n            color: \"#8884d8\"\r\n          }}\r\n        >\r\n          ${numberWithCommas(formattedDate[1][0])}\r\n        </h1>\r\n        <h4>\r\n          {formattedDate[1][1]} <strong>{formattedDate[1][2]}</strong>\r\n        </h4>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { getRandomInt } from \"../functions\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nexport default function MultipleLineChart(props) {\r\n  return (\r\n    <LineChart\r\n      width={900}\r\n      height={500}\r\n      data={props.dateDate}\r\n      margin={{\r\n        top: 5,\r\n        right: 10,\r\n        left: 20,\r\n        bottom: 50\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis\r\n        label={{ value: \"Total Spending (SGD)\", angle: -90, position: \"left\" }}\r\n      />\r\n      <Tooltip />\r\n      <Legend />\r\n      {props.dataCategories.map(row => (\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey={row}\r\n          stroke={`rgb(${getRandomInt(200)}, 34, ${getRandomInt(255)})`}\r\n        />\r\n      ))}\r\n    </LineChart>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MultipleLineChart from \"../../Charts/MultipleLineChart\";\r\nimport { sortDate } from \"../../functions\";\r\n\r\nexport default function CategoryLine(props) {\r\n  const formatData = data => {\r\n    const dates = {};\r\n\r\n    data.forEach(row => {\r\n      let { category, total_amount, id, date_of_invoice } = row;\r\n      total_amount = parseInt(total_amount);\r\n\r\n      if (date_of_invoice !== \"No Prediction\" && !isNaN(total_amount)) {\r\n        if (dates[date_of_invoice]) {\r\n          if (dates[date_of_invoice][category]) {\r\n            dates[date_of_invoice][category] += total_amount;\r\n          } else {\r\n            dates[date_of_invoice][category] = total_amount;\r\n          }\r\n        } else {\r\n          dates[date_of_invoice] = {};\r\n          dates[date_of_invoice][category] = total_amount;\r\n        }\r\n      }\r\n    });\r\n\r\n    const dataArr = Object.keys(dates).map(date => ({\r\n      name: date,\r\n      ...dates[date]\r\n    }));\r\n\r\n    return dataArr.filter(r => r.name !== \"null\");\r\n  };\r\n\r\n  const get_categories = data => {\r\n    const cats = new Set([]);\r\n    data.forEach(row => {\r\n      const k = Object.keys(row);\r\n      k.forEach(i => cats.add(i));\r\n    });\r\n    cats.delete(\"name\");\r\n    cats.delete(\"null\");\r\n    return Array.from(cats);\r\n  };\r\n\r\n  const format_date_cat = data => {\r\n    const categories = new Set(get_categories(data));\r\n    return data\r\n      .map(datum => {\r\n        const temp = {};\r\n        categories.forEach(cat => {\r\n          temp[cat] = 0;\r\n        });\r\n        return { ...temp, ...datum };\r\n      })\r\n      .sort(sortDate);\r\n  };\r\n\r\n  const formatIncrease = data => {\r\n    const out = [];\r\n    const len = data.length;\r\n    const last = data[len - 1];\r\n    const secondLast = data[len - 2];\r\n    Object.keys(last).forEach(key => {\r\n      if (key !== \"name\" && key !== \"null\") {\r\n        out.push({ category: key, difference: last[key] - secondLast[key] });\r\n      }\r\n    });\r\n    return out;\r\n  };\r\n\r\n  const formattedData = formatData(props.invoicesData);\r\n\r\n  return (\r\n    <div className=\"main-card2\">\r\n      <div style={{ marginTop: \"36px\", textAlign: \"center\" }}>\r\n        <h1>CATEGORY TRENDS</h1>\r\n        <div\r\n          style={{\r\n            marginLeft: \"10%\",\r\n            width: \"80%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          {formatIncrease(format_date_cat(formattedData)).map(d => (\r\n            <div>\r\n              <strong>{d.category}</strong>\r\n              <h1\r\n                style={{\r\n                  fontSize: \"3rem\",\r\n                  fontFamily: \"Roboto\",\r\n                  fontWeight: \"300\",\r\n                  marginBottom: \"-10px\",\r\n                  color: \"#5366ac\"\r\n                }}\r\n              >\r\n                ${d.difference}\r\n              </h1>\r\n              <h4>Monthly Change</h4>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <MultipleLineChart\r\n          dataCategories={get_categories(formattedData)}\r\n          dateDate={format_date_cat(formattedData)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport CountryPie from \"./CountryPie\";\r\nimport CountryStack from \"./CountryStack\";\r\nimport CategoryBar from \"./CategoryBar\";\r\nimport CategoryLine from \"./CategoryLine\";\r\n\r\nexport default function Trends(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}\r\n      >\r\n        <CountryPie invoicesData={props.processed} />\r\n        <CountryStack invoicesData={props.processed} />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}\r\n      >\r\n        <CategoryLine invoicesData={props.invoicesData} />\r\n        <CategoryBar invoicesData={props.invoicesData} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Menu, notification, Icon } from \"antd\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Accuracy from \"./Components/Accuracy\";\r\nimport Invoices from \"./Components/Invoices\";\r\nimport Trends from \"./Components/Trends\";\r\nimport { formatAreaChartData } from \"./functions\";\r\n\r\nimport io from \"socket.io-client\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      page: \"HOME\",\r\n      accuracy: {},\r\n      invoices: [],\r\n      socket: null\r\n    };\r\n  }\r\n\r\n  handlePageChange = e => {\r\n    this.setState({ page: e.key });\r\n  };\r\n\r\n  notificationHandler = data => {\r\n    let icon;\r\n    if (data.title === \"PROCESSING\") {\r\n      icon = <Icon type=\"sync\" spin style={{ color: \"orange\" }} />;\r\n    }\r\n    if (\r\n      data.title === \"PROCESSING COMPLETED\" ||\r\n      data.title === \"INVOICE UPDATED\"\r\n    ) {\r\n      icon = (\r\n        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n      );\r\n    }\r\n    notification.open({\r\n      message: data.title,\r\n      description: data.content,\r\n      icon,\r\n      onClick: null\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const socket = io(\"http://localhost:5000\");\r\n\r\n    socket.on(\"invoices_update\", data =>\r\n      this.setState({ invoices: JSON.parse(data) })\r\n    );\r\n    socket.on(\"status_update\", data =>\r\n      this.notificationHandler(JSON.parse(data))\r\n    );\r\n    socket.on(\"accuracy_metrics\", data => {\r\n      this.setState({ accuracy: JSON.parse(data) });\r\n    });\r\n\r\n    socket.emit(\"req_invoices\");\r\n    socket.emit(\"req_metrics\");\r\n\r\n    this.setState({ socket });\r\n  }\r\n\r\n  render() {\r\n    const { Header, Content, Footer } = Layout;\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout className=\"layout\">\r\n          <Header>\r\n            <div className=\"logo\">Dr-NET Document Classifier</div>\r\n            <Menu\r\n              theme=\"dark\"\r\n              mode=\"horizontal\"\r\n              defaultSelectedKeys={[\"HOME\"]}\r\n              style={{ lineHeight: \"64px\" }}\r\n            >\r\n              <Menu.Item onClick={this.handlePageChange} key=\"HOME\">\r\n                Home\r\n              </Menu.Item>\r\n              <Menu.Item onClick={this.handlePageChange} key=\"ACCURACY\">\r\n                Accuracy\r\n              </Menu.Item>\r\n              <Menu.Item onClick={this.handlePageChange} key=\"INVOICES\">\r\n                Invoices\r\n              </Menu.Item>\r\n              <Menu.Item onClick={this.handlePageChange} key=\"TRENDS\">\r\n                Trends\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              padding: \"30px\",\r\n              background: \"#eaeaea\",\r\n              overflowY: \"scroll\"\r\n            }}\r\n          >\r\n            {this.state.page === \"HOME\" && (\r\n              <Dashboard\r\n                handlePageChange={this.handlePageChange}\r\n                socket={this.state.socket}\r\n                invoicesData={this.state.invoices}\r\n                accuracyData={this.state.accuracy}\r\n                processed={formatAreaChartData(this.state.invoices)}\r\n              />\r\n            )}\r\n            {this.state.page === \"ACCURACY\" && (\r\n              <Accuracy\r\n                handlePageChange={this.handlePageChange}\r\n                socket={this.state.socket}\r\n                accuracyData={this.state.accuracy}\r\n              />\r\n            )}\r\n            {this.state.page === \"INVOICES\" && (\r\n              <Invoices\r\n                handlePageChange={this.handlePageChange}\r\n                socket={this.state.socket}\r\n                invoicesData={this.state.invoices}\r\n              />\r\n            )}\r\n            {this.state.page === \"TRENDS\" && (\r\n              <Trends\r\n                processed={formatAreaChartData(this.state.invoices)}\r\n                socket={this.state.socket}\r\n                invoicesData={this.state.invoices}\r\n              />\r\n            )}\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", background: \"#eaeaea\" }}>\r\n            2019 NUS BT3101 CAPSTONE GROUP 2\r\n          </Footer>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}